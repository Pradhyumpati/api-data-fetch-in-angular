{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.url = 'https://jsonplaceholder.typicode.com/posts';\n    this.items = [];\n    this.http.get(this.url).toPromise().then(data => {\n      console.log(data);\n      for (let key in data) if (data.hasOwnProperty(key)) this.items.push(data[key]);\n    });\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAFvB,QAAG,GAAG,4CAA4C;IACrD,UAAK,GAAC,EAAE;IAEH,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,GAAG,CAAC,CAACC,SAAS,EAAE,CAACC,IAAI,CAACC,IAAI,IAAG;MACrDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,KAAI,IAAIG,GAAG,IAAIH,IAAI,EACnB,IAAGA,IAAI,CAACI,cAAc,CAACD,GAAG,CAAC,EAC3B,IAAI,CAACE,KAAK,CAACC,IAAI,CAACN,IAAI,CAACG,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;EAEP;CACC;AAZYV,YAAY,eALxBD,SAAS,CAAC;EACTe,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWhB,YAAY,CAYxB;SAZYA,YAAY","names":["Component","AppComponent","constructor","http","get","url","toPromise","then","data","console","log","key","hasOwnProperty","items","push","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\RAJESH\\Desktop\\requestjson\\requestjason\\src\\app\\app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {JSONPlaceholderService} from './services/jsonplaceholder.service'\nimport {HttpClient} from '@angular/common/http'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n   url = 'https://jsonplaceholder.typicode.com/posts';\nitems=[];\n  constructor(private http : HttpClient){\n     this.http.get(this.url).toPromise().then(data =>{\nconsole.log(data)\nfor(let key in data)\nif(data.hasOwnProperty(key))\nthis.items.push(data[key]);\n     });\n   \n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}